{"version":3,"file":"bubble-engine.js","sources":["../../src/component/ComponentBase.ts","../../src/util/wait.ts","../../src/util/Rect.ts","../../src/util/UndirectedTable.ts","../../src/util/EventEmitter.ts","../../src/component/GraphicComponent.ts","../../src/component/ColliderComponent.ts","../../src/core/input/InputDefinition.ts","../../src/math/Matrix2.ts","../../src/math/Matrix3.ts","../../src/math/Vector2.ts","../../src/math/Vector3.ts","../../src/math/Color.ts","../../src/core/input/Vector2Provider.ts","../../src/core/input/ScalarProvider.ts","../../src/core/input/KeyBinder.ts","../../src/core/input/InputManager.ts","../../src/core/loader/fileLoaders.ts","../../src/core/loader/StaticFileLoader.ts","../../src/util/objutil.ts","../../src/core/loader/DynamicFileLoader.ts","../../src/core/loader/asset/AssetBase.ts","../../src/core/loader/asset/AudioAsset.ts","../../src/core/loader/asset/SpriteAsset.ts","../../src/core/loader/asset/SpriteSheetAsset.ts","../../src/core/loader/asset/SubSpriteAsset.ts","../../src/core/level/LevelSelector.ts","../../src/event/GameEvent.ts","../../src/event/LevelEvent.ts","../../src/core/level/LevelManager.ts","../../src/core/level/template/ActionLevelManager.ts","../../src/core/store/GlobalStore.ts","../../src/core/achievement/AchievementManager.ts","../../src/core/preprocess/PreprocessBase.ts","../../src/core/preprocess/GraphicPreprocess.ts","../../src/core/preprocess/GraphicManager.ts","../../src/core/preprocess/TransformPreprocess.ts","../../src/core/preprocess/CollisionPreprocess.ts","../../src/core/preprocess/CollisionLayerInfo.ts","../../src/collision/tester/boxBoxHitTest.ts","../../src/collision/tester/testerTable.ts","../../src/core/preprocess/CollisionManager.ts","../../src/core/time/Time.ts","../../src/core/GameCore.ts","../../src/entry/GameEntry.ts","../../src/entry/RespawnPoint.ts","../../src/graphic/GraphicBase.ts","../../src/graphic/SpriteGraphic.ts","../../src/graphic/SpriteSheetGraphic.ts","../../src/graphic/util.ts","../../src/graphic/TextGraphic.ts","../../src/graphic/PathGraphic.ts","../../src/graphic/path/PathBase.ts","../../src/graphic/path/BeginPath.ts","../../src/graphic/path/LinePath.ts","../../src/graphic/path/ClosePath.ts"],"sourcesContent":["export class ComponentBase {\n    _entry = null;\n    get entry() {\n        if (!this._entry)\n            throw new Error('ComponentBase: This component is not attached to entry.');\n        return this._entry;\n    }\n    _initialized = false;\n    _started = false;\n    _enabled = true;\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        if (!this._entry?.enabled) {\n            this._enabled = value;\n            return;\n        }\n        if (!this._enabled && value && this._entry?.enabled) {\n            this._enabled = value;\n            this.innerEnable();\n        }\n        else if (this._enabled && !value && this._entry?.enabled) {\n            this.innerDisable();\n            this._enabled = value;\n        }\n    }\n    _destroyed = false;\n    get destroyed() {\n        return this._destroyed;\n    }\n    // region LifeCycle Hooks\n    innerAdded(entry) {\n        this._entry = entry;\n        this._destroyed = false;\n        this._initialized = false;\n        this._started = false;\n    }\n    innerUpdate() {\n        if (this._enabled) {\n            if (!this._initialized) {\n                this.onInitialize();\n                this._initialized = true;\n            }\n            if (!this._started) {\n                this.onStart();\n                this._started = true;\n            }\n            this.onUpdate();\n        }\n    }\n    innerEnable() {\n        if (this._enabled && this._entry?.enabled) {\n            this._started = false;\n            this.onEnable();\n        }\n    }\n    innerDisable() {\n        if (this._enabled && this._entry?.enabled) {\n            this.onDisable();\n        }\n    }\n    innerDestroy() {\n        if (this._initialized)\n            this.onDestroy();\n        this._destroyed = true;\n    }\n}\n//# sourceMappingURL=ComponentBase.js.map","export const wait = (ms) => new Promise((resolve) => {\n    setTimeout(resolve, ms);\n});\nexport const waitFrame = () => new Promise((resolve) => {\n    requestAnimationFrame(resolve);\n});\n//# sourceMappingURL=wait.js.map","export class Rect {\n    x;\n    y;\n    width;\n    height;\n    constructor(x = 0, y = 0, width = 0, height = 0) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    set(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    copy(rect) {\n        this.x = rect.x;\n        this.y = rect.y;\n        this.width = rect.width;\n        this.height = rect.height;\n    }\n    clone() {\n        return new Rect(this.x, this.y, this.width, this.height);\n    }\n    contains(x, y) {\n        return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n    }\n    containsRect(rect) {\n        return (this.contains(rect.x, rect.y) && this.contains(rect.x + rect.width, rect.y + rect.height));\n    }\n    intersects(rect) {\n        return (this.x < rect.x + rect.width &&\n            this.x + this.width > rect.x &&\n            this.y < rect.y + rect.height &&\n            this.y + this.height > rect.y);\n    }\n    merge(rect) {\n        const left = Math.min(this.x, rect.x);\n        const top = Math.min(this.y, rect.y);\n        const right = Math.max(this.x + this.width, rect.x + rect.width);\n        const bottom = Math.max(this.y + this.height, rect.y + rect.height);\n        return new Rect(left, top, right - left, bottom - top);\n    }\n}\n//# sourceMappingURL=Rect.js.map","/**\n * 与えられた文字列のリストのうち重複のない二つをキーとするテーブル\n */\nexport class UndirectedTable {\n    _keys;\n    _table = {};\n    constructor(keys, defaultValue) {\n        this._keys = keys;\n        keys.forEach((key) => {\n            this._table[key] = {};\n            keys.forEach((column) => {\n                this._table[key][column] = defaultValue;\n            });\n        });\n    }\n    /**\n     * 2つの文字列をキーとする値の取り出し\n     * @param key1\n     * @param key2\n     */\n    get(key1, key2) {\n        return this._table[key1][key2];\n    }\n    /**\n     * 2つの文字列をキーとする値の設定\n     * @param row\n     * @param column\n     * @param value\n     */\n    set(row, column, value) {\n        this._table[row][column] = value;\n        this._table[column][row] = value;\n    }\n    /**\n     * テーブルの要素を重複無しで取り出す\n     * @param callback\n     */\n    forEach(callback) {\n        this._keys.forEach((key, index) => {\n            for (let i = 0; i < index + 1; i += 1) {\n                callback(key, this._keys[i], this.get(key, this._keys[i]));\n            }\n        });\n    }\n}\n//# sourceMappingURL=UndirectedTable.js.map","export class EventEmitter {\n    listeners;\n    constructor() {\n        this.listeners = {};\n    }\n    on(event, listener) {\n        if (!this.listeners[event]) {\n            this.listeners[event] = [];\n        }\n        this.listeners[event].push(listener);\n    }\n    emit(event, value) {\n        const listeners = this.listeners[event];\n        if (listeners) {\n            listeners.forEach((listener) => {\n                listener(value);\n            });\n        }\n    }\n    off(event, listener) {\n        const listeners = this.listeners[event];\n        if (listeners) {\n            const index = listeners.indexOf(listener);\n            if (index >= 0) {\n                listeners.splice(index, 1);\n            }\n        }\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","import { Rect } from '../util';\nimport { ComponentBase } from './ComponentBase';\n/**\n * 描画系をつかさどるコンポーネント\n */\nexport class GraphicComponent extends ComponentBase {\n    /**\n     * グラフィックコンポーネントの回転\n     */\n    rotation = 0;\n    /**\n     * グラフィックコンポーネントのバウンディングボックス\n     */\n    boundingRect = new Rect(0, 0, 0, 0);\n    parts;\n    layer;\n    constructor(layer, parts) {\n        super();\n        this.layer = layer;\n        this.parts = parts;\n    }\n    onDestroy() { }\n    onDisable() { }\n    onEnable() { }\n    onInitialize() { }\n    onStart() { }\n    onUpdate() { }\n}\n//# sourceMappingURL=GraphicComponent.js.map","/* eslint-disable no-use-before-define */\nimport { ComponentBase } from './ComponentBase';\nimport { EventEmitter } from '../util';\n/**\n * コライダーを格納するコンポーネント\n */\nexport class ColliderComponent extends ComponentBase {\n    colliderId = '';\n    layer;\n    collisions = [];\n    hitColliders = new Set();\n    tempColliders = new Set();\n    eventEmitter = new EventEmitter();\n    constructor(layer) {\n        super();\n        this.layer = layer;\n    }\n    /**\n     * 衝突情報をリセット\n     */\n    resetCollision() {\n        this.collisions.length = 0;\n    }\n    /**\n     * 衝突情報を登録\n     * CollisionPreprocessManagerによって登録される\n     * @param collisionInfo\n     */\n    registerCollision(collisionInfo) {\n        this.collisions.push(collisionInfo);\n    }\n    /**\n     * 登録された衝突情報を整理して衝突イベントを発行する\n     */\n    processCollision() {\n        this.tempColliders.clear();\n        this.collisions.forEach((collisionInfo) => {\n            this.tempColliders.add(collisionInfo.collider);\n            if (this.hitColliders.has(collisionInfo.collider)) {\n                this.emit('collisionStay', collisionInfo);\n            }\n            else {\n                this.hitColliders.add(collisionInfo.collider);\n                this.emit('collisionStart', collisionInfo);\n            }\n        });\n        // 衝突終了処理\n        this.hitColliders.forEach((collider) => {\n            if (!this.tempColliders.has(collider)) {\n                this.hitColliders.delete(collider);\n                this.emit('collisionEnd', collider);\n            }\n        });\n    }\n    onDestroy() { }\n    onDisable() { }\n    onEnable() { }\n    onInitialize() { }\n    onStart() { }\n    onUpdate() { }\n    // region Event Emitter implements\n    emit(event, value) {\n        this.eventEmitter.emit(event, value);\n    }\n    off(event, listener) {\n        this.eventEmitter.off(event, listener);\n    }\n    on(event, listener) {\n        this.eventEmitter.on(event, listener);\n    }\n}\n//# sourceMappingURL=ColliderComponent.js.map","export const inputableKeyList = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    ' ',\n    'Enter',\n    'Shift',\n    'Control',\n    'Alt',\n    'Tab',\n    'Escape',\n    'Backspace',\n    'CapsLock',\n    'Delete',\n    'ArrowUp',\n    'ArrowDown',\n    'ArrowLeft',\n    'ArrowRight',\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    'MouseLeft',\n    'MouseRight',\n    'MouseMiddle',\n    'MouseX',\n    'MouseY',\n    'MouseWheel',\n    'GamepadA',\n    'GamepadB',\n    'GamepadX',\n    'GamepadY',\n    'GamepadL1',\n    'GamepadL2',\n    'GamepadL3',\n    'GamepadR1',\n    'GamepadR2',\n    'GamepadR3',\n    'GamepadStart',\n    'GamepadSelect',\n    'GamepadUp',\n    'GamepadDown',\n    'GamepadLeft',\n    'GamepadRight',\n    'GamepadAxisLeftX',\n    'GamepadAxisLeftY',\n    'GamepadAxisRightX',\n    'GamepadAxisRightY',\n    'GamepadAxisL2',\n    'GamepadAxisR2',\n    'GamepadAxisL3',\n    'GamepadAxisR3',\n];\n//# sourceMappingURL=InputDefinition.js.map","export class Matrix2 {\n    m00;\n    m01;\n    m10;\n    m11;\n    constructor(m00 = 1, m01 = 0, m10 = 0, m11 = 1) {\n        this.m00 = m00;\n        this.m01 = m01;\n        this.m10 = m10;\n        this.m11 = m11;\n    }\n    set(m00, m01, m10, m11) {\n        this.m00 = m00;\n        this.m01 = m01;\n        this.m10 = m10;\n        this.m11 = m11;\n        return this;\n    }\n    identity() {\n        this.set(1, 0, 0, 1);\n        return this;\n    }\n    transpose() {\n        const { m01 } = this;\n        this.m01 = this.m10;\n        this.m10 = m01;\n        return this;\n    }\n    invert() {\n        const { m00, m01, m10, m11 } = this;\n        const det = this.determinant();\n        if (det === 0) {\n            return this.identity();\n        }\n        const detInv = 1 / det;\n        this.set(m11 * detInv, -m01 * detInv, -m10 * detInv, m00 * detInv);\n        return this;\n    }\n    determinant() {\n        return this.m00 * this.m11 - this.m01 * this.m10;\n    }\n    add(m) {\n        this.m00 += m.m00;\n        this.m01 += m.m01;\n        this.m10 += m.m10;\n        this.m11 += m.m11;\n        return this;\n    }\n    addScalar(s) {\n        this.m00 += s;\n        this.m01 += s;\n        this.m10 += s;\n        this.m11 += s;\n        return this;\n    }\n    sub(m) {\n        this.m00 -= m.m00;\n        this.m01 -= m.m01;\n        this.m10 -= m.m10;\n        this.m11 -= m.m11;\n        return this;\n    }\n    subScalar(s) {\n        this.m00 -= s;\n        this.m01 -= s;\n        this.m10 -= s;\n        this.m11 -= s;\n        return this;\n    }\n    multiply(m) {\n        const { m00, m01, m10, m11 } = this;\n        this.m00 = m00 * m.m00 + m01 * m.m10;\n        this.m01 = m00 * m.m01 + m01 * m.m11;\n        this.m10 = m10 * m.m00 + m11 * m.m10;\n        this.m11 = m10 * m.m01 + m11 * m.m11;\n        return this;\n    }\n    scale(m) {\n        this.m00 *= m.m00;\n        this.m01 *= m.m01;\n        this.m10 *= m.m10;\n        this.m11 *= m.m11;\n        return this;\n    }\n    scaleScalar(v) {\n        this.m00 *= v;\n        this.m01 *= v;\n        this.m10 *= v;\n        this.m11 *= v;\n        return this;\n    }\n    rotate(rad) {\n        const { m00, m01, m10, m11 } = this;\n        const c = Math.cos(rad);\n        const s = Math.sin(rad);\n        this.m00 = m00 * c + m01 * s;\n        this.m01 = m00 * -s + m01 * c;\n        this.m10 = m10 * c + m11 * s;\n        this.m11 = m10 * -s + m11 * c;\n        return this;\n    }\n    clone() {\n        return new Matrix2().copy(this);\n    }\n    copy(m) {\n        this.m00 = m.m00;\n        this.m01 = m.m01;\n        this.m10 = m.m10;\n        this.m11 = m.m11;\n        return this;\n    }\n    equals(m) {\n        return this.m00 === m.m00 && this.m01 === m.m01 && this.m10 === m.m10 && this.m11 === m.m11;\n    }\n}\n//# sourceMappingURL=Matrix2.js.map","export class Matrix3 {\n    m00;\n    m01;\n    m02;\n    m10;\n    m11;\n    m12;\n    m20;\n    m21;\n    m22;\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        this.m00 = m00;\n        this.m01 = m01;\n        this.m02 = m02;\n        this.m10 = m10;\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m20 = m20;\n        this.m21 = m21;\n        this.m22 = m22;\n    }\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        this.m00 = m00;\n        this.m01 = m01;\n        this.m02 = m02;\n        this.m10 = m10;\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m20 = m20;\n        this.m21 = m21;\n        this.m22 = m22;\n        return this;\n    }\n    identity() {\n        this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n        return this;\n    }\n    transpose() {\n        const { m01, m02, m10, m12, m20, m21 } = this;\n        this.m01 = m10;\n        this.m02 = m20;\n        this.m10 = m01;\n        this.m12 = m21;\n        this.m20 = m02;\n        this.m21 = m12;\n        return this;\n    }\n    invert() {\n        const { m00, m01, m02, m10, m11, m12, m20, m21, m22 } = this;\n        const det = this.determinant();\n        if (det === 0) {\n            return this.identity();\n        }\n        const detInv = 1 / det;\n        this.set((m11 * m22 - m12 * m21) * detInv, -(m01 * m22 - m02 * m21) * detInv, (m01 * m12 - m02 * m11) * detInv, -(m10 * m22 - m12 * m20) * detInv, (m00 * m22 - m02 * m20) * detInv, -(m00 * m12 - m02 * m10) * detInv, (m10 * m21 - m11 * m20) * detInv, -(m00 * m21 - m01 * m20) * detInv, (m00 * m11 - m01 * m10) * detInv);\n        return this;\n    }\n    determinant() {\n        const { m00, m01, m02, m10, m11, m12, m20, m21, m22 } = this;\n        return (m00 * (m11 * m22 - m12 * m21) - m01 * (m10 * m22 - m12 * m20) + m02 * (m10 * m21 - m11 * m20));\n    }\n    add(m) {\n        this.m00 += m.m00;\n        this.m01 += m.m01;\n        this.m02 += m.m02;\n        this.m10 += m.m10;\n        this.m11 += m.m11;\n        this.m12 += m.m12;\n        this.m20 += m.m20;\n        this.m21 += m.m21;\n        this.m22 += m.m22;\n        return this;\n    }\n    addScalar(s) {\n        this.m00 += s;\n        this.m01 += s;\n        this.m02 += s;\n        this.m10 += s;\n        this.m11 += s;\n        this.m12 += s;\n        this.m20 += s;\n        this.m21 += s;\n        this.m22 += s;\n        return this;\n    }\n    sub(m) {\n        this.m00 -= m.m00;\n        this.m01 -= m.m01;\n        this.m02 -= m.m02;\n        this.m10 -= m.m10;\n        this.m11 -= m.m11;\n        this.m12 -= m.m12;\n        this.m20 -= m.m20;\n        this.m21 -= m.m21;\n        this.m22 -= m.m22;\n        return this;\n    }\n    subScalar(s) {\n        this.m00 -= s;\n        this.m01 -= s;\n        this.m02 -= s;\n        this.m10 -= s;\n        this.m11 -= s;\n        this.m12 -= s;\n        this.m20 -= s;\n        this.m21 -= s;\n        this.m22 -= s;\n        return this;\n    }\n    multiply(m) {\n        const { m00, m01, m02, m10, m11, m12, m20, m21, m22 } = this;\n        this.set(m00 * m.m00 + m01 * m.m10 + m02 * m.m20, m00 * m.m01 + m01 * m.m11 + m02 * m.m21, m00 * m.m02 + m01 * m.m12 + m02 * m.m22, m10 * m.m00 + m11 * m.m10 + m12 * m.m20, m10 * m.m01 + m11 * m.m11 + m12 * m.m21, m10 * m.m02 + m11 * m.m12 + m12 * m.m22, m20 * m.m00 + m21 * m.m10 + m22 * m.m20, m20 * m.m01 + m21 * m.m11 + m22 * m.m21, m20 * m.m02 + m21 * m.m12 + m22 * m.m22);\n        return this;\n    }\n    scale(m) {\n        this.m00 *= m.m00;\n        this.m01 *= m.m01;\n        this.m02 *= m.m02;\n        this.m10 *= m.m10;\n        this.m11 *= m.m11;\n        this.m12 *= m.m12;\n        this.m20 *= m.m20;\n        this.m21 *= m.m21;\n        this.m22 *= m.m22;\n        return this;\n    }\n    scaleScalar(v) {\n        this.m00 *= v;\n        this.m01 *= v;\n        this.m02 *= v;\n        this.m10 *= v;\n        this.m11 *= v;\n        this.m12 *= v;\n        this.m20 *= v;\n        this.m21 *= v;\n        this.m22 *= v;\n        return this;\n    }\n    rotateMat2D(radian) {\n        const cos = Math.cos(radian);\n        const sin = Math.sin(radian);\n        const { m00, m01, m02, m10, m11, m12, m20, m21, m22 } = this;\n        this.set(m00 * cos + m01 * sin, m00 * -sin + m01 * cos, m02, m10 * cos + m11 * sin, m10 * -sin + m11 * cos, m12, m20 * cos + m21 * sin, m20 * -sin + m21 * cos, m22);\n        return this;\n    }\n    translateMat2D(x, y) {\n        const { m00, m01, m02, m10, m11, m12, m20, m21, m22 } = this;\n        this.set(m00, m01, m02 + x, m10, m11, m12 + y, m20, m21, m22);\n        return this;\n    }\n    scaleMat2D(x, y) {\n        const { m00, m01, m02, m10, m11, m12, m20, m21, m22 } = this;\n        this.set(m00 * x, m01 * y, m02, m10 * x, m11 * y, m12, m20 * x, m21 * y, m22);\n        return this;\n    }\n    compose(position, rotation, scale) {\n        const cos = Math.cos(rotation);\n        const sin = Math.sin(rotation);\n        const { x: sx, y: sy } = scale;\n        this.set(cos * sx, -sin * sy, position.x, sin * sx, cos * sy, position.y, 0, 0, 1);\n        return this;\n    }\n    clone() {\n        return new Matrix3().copy(this);\n    }\n    copy(m) {\n        this.m00 = m.m00;\n        this.m01 = m.m01;\n        this.m02 = m.m02;\n        this.m10 = m.m10;\n        this.m11 = m.m11;\n        this.m12 = m.m12;\n        this.m20 = m.m20;\n        this.m21 = m.m21;\n        this.m22 = m.m22;\n        return this;\n    }\n    equals(m) {\n        return (this.m00 === m.m00 &&\n            this.m01 === m.m01 &&\n            this.m02 === m.m02 &&\n            this.m10 === m.m10 &&\n            this.m11 === m.m11 &&\n            this.m12 === m.m12 &&\n            this.m20 === m.m20 &&\n            this.m21 === m.m21 &&\n            this.m22 === m.m22);\n    }\n}\n//# sourceMappingURL=Matrix3.js.map","export class Vector2 {\n    x;\n    y;\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    setFromPolar(r, theta) {\n        this.x = r * Math.cos(theta);\n        this.y = r * Math.sin(theta);\n        return this;\n    }\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        return this;\n    }\n    addScalar(s) {\n        this.x += s;\n        this.y += s;\n        return this;\n    }\n    sub(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        return this;\n    }\n    subScalar(s) {\n        this.x -= s;\n        this.y -= s;\n        return this;\n    }\n    multiply(v) {\n        this.x *= v.x;\n        this.y *= v.y;\n        return this;\n    }\n    multiplyMat2(m) {\n        const { x, y } = this;\n        this.x = m.m00 * x + m.m01 * y;\n        this.y = m.m10 * x + m.m11 * y;\n        return this;\n    }\n    multiplyMat3(m) {\n        const { x, y } = this;\n        this.x = m.m00 * x + m.m01 * y + m.m02;\n        this.y = m.m10 * x + m.m11 * y + m.m12;\n        return this;\n    }\n    multiplyScalar(s) {\n        this.x *= s;\n        this.y *= s;\n        return this;\n    }\n    divide(v) {\n        this.x /= v.x;\n        this.y /= v.y;\n        return this;\n    }\n    divideScalar(s) {\n        this.x /= s;\n        this.y /= s;\n        return this;\n    }\n    lerp(v, t) {\n        this.x += (v.x - this.x) * t;\n        this.y += (v.y - this.y) * t;\n        return this;\n    }\n    dot(v) {\n        return this.x * v.x + this.y * v.y;\n    }\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n    normalize() {\n        return this.divideScalar(this.length());\n    }\n    distanceTo(v) {\n        return Math.sqrt(this.distanceToSquared(v));\n    }\n    distanceToSquared(v) {\n        const dx = this.x - v.x;\n        const dy = this.y - v.y;\n        return dx * dx + dy * dy;\n    }\n    angleTo(v) {\n        const theta = this.dot(v) / (this.length() * v.length());\n        return Math.acos(theta);\n    }\n    clone() {\n        return new Vector2().copy(this);\n    }\n    copy(v) {\n        this.x = v.x;\n        this.y = v.y;\n        return this;\n    }\n    equals(v) {\n        return this.x === v.x && this.y === v.y;\n    }\n}\n//# sourceMappingURL=Vector2.js.map","export class Vector3 {\n    x;\n    y;\n    z;\n    constructor(x = 0, y = 0, z = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    set(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n    setFromSpherical(r, theta, phi) {\n        const sinPhiRadius = Math.sin(phi) * r;\n        this.x = sinPhiRadius * Math.sin(theta);\n        this.y = Math.cos(phi) * r;\n        this.z = sinPhiRadius * Math.cos(theta);\n        return this;\n    }\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return this;\n    }\n    addScalar(s) {\n        this.x += s;\n        this.y += s;\n        this.z += s;\n        return this;\n    }\n    sub(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return this;\n    }\n    subScalar(s) {\n        this.x -= s;\n        this.y -= s;\n        this.z -= s;\n        return this;\n    }\n    multiply(v) {\n        this.x *= v.x;\n        this.y *= v.y;\n        this.z *= v.z;\n        return this;\n    }\n    multiplyMat3(m) {\n        const { x, y, z } = this;\n        this.x = m.m00 * x + m.m01 * y + m.m02 * z;\n        this.y = m.m10 * x + m.m11 * y + m.m12 * z;\n        this.z = m.m20 * x + m.m21 * y + m.m22 * z;\n        return this;\n    }\n    multiplyScalar(s) {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n        return this;\n    }\n    divide(v) {\n        this.x /= v.x;\n        this.y /= v.y;\n        this.z /= v.z;\n        return this;\n    }\n    divideScalar(s) {\n        this.x /= s;\n        this.y /= s;\n        this.z /= s;\n        return this;\n    }\n    lerp(v, t) {\n        this.x += (v.x - this.x) * t;\n        this.y += (v.y - this.y) * t;\n        this.z += (v.z - this.z) * t;\n        return this;\n    }\n    dot(v) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n    cross(v) {\n        const { x, y, z } = this;\n        this.x = y * v.z - z * v.y;\n        this.y = z * v.x - x * v.z;\n        this.z = x * v.y - y * v.x;\n        return this;\n    }\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n    normalize() {\n        this.divideScalar(this.length());\n        return this;\n    }\n    distanceTo(v) {\n        return Math.sqrt(this.distanceToSquared(v));\n    }\n    distanceToSquared(v) {\n        const dx = this.x - v.x;\n        const dy = this.y - v.y;\n        const dz = this.z - v.z;\n        return dx * dx + dy * dy + dz * dz;\n    }\n    clone() {\n        return new Vector3(this.x, this.y, this.z);\n    }\n    copy(v) {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        return this;\n    }\n    equals(v) {\n        return this.x === v.x && this.y === v.y && this.z === v.z;\n    }\n}\n//# sourceMappingURL=Vector3.js.map","export class Color {\n    r;\n    g;\n    b;\n    a;\n    constructor(r = 0, g = 0, b = 0, a = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    set(r, g, b, a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a || this.a;\n        return this;\n    }\n    setFromHex(hex) {\n        this.r = ((hex >> 16) & 255) / 255;\n        this.g = ((hex >> 8) & 255) / 255;\n        this.b = (hex & 255) / 255;\n        return this;\n    }\n    setFromHSL(h, s, l) {\n        // hslToRgb\n        if (s === 0) {\n            this.r = this.g = this.b = l;\n        }\n        else {\n            const hue2rgb = (p, q, _t) => {\n                let t = _t;\n                if (t < 0) {\n                    t += 1;\n                }\n                if (t > 1) {\n                    t -= 1;\n                }\n                if (t < 1 / 6) {\n                    return p + (q - p) * 6 * t;\n                }\n                if (t < 1 / 2) {\n                    return q;\n                }\n                if (t < 2 / 3) {\n                    return p + (q - p) * (2 / 3 - t) * 6;\n                }\n                return p;\n            };\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            this.r = hue2rgb(p, q, h + 1 / 3);\n            this.g = hue2rgb(p, q, h);\n            this.b = hue2rgb(p, q, h - 1 / 3);\n        }\n        return this;\n    }\n    toHSL() {\n        // rgbToHsl\n        const { r, g, b } = this;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h;\n        let s;\n        const l = (max + min) / 2;\n        if (max === min) {\n            h = s = 0;\n        }\n        else {\n            const d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                default:\n                    h = (r - g) / d + 4;\n                    break;\n            }\n            h /= 6;\n        }\n        return { h, s, l };\n    }\n    add(color) {\n        this.r += color.r;\n        this.g += color.g;\n        this.b += color.b;\n        this.a += color.a;\n        return this;\n    }\n    addScalar(s) {\n        this.r += s;\n        this.g += s;\n        this.b += s;\n        this.a += s;\n        return this;\n    }\n    sub(color) {\n        this.r -= color.r;\n        this.g -= color.g;\n        this.b -= color.b;\n        this.a -= color.a;\n        return this;\n    }\n    subScalar(s) {\n        this.r -= s;\n        this.g -= s;\n        this.b -= s;\n        this.a -= s;\n        return this;\n    }\n    multiply(color) {\n        this.r *= color.r;\n        this.g *= color.g;\n        this.b *= color.b;\n        this.a *= color.a;\n        return this;\n    }\n    multiplyScalar(s) {\n        this.r *= s;\n        this.g *= s;\n        this.b *= s;\n        this.a *= s;\n        return this;\n    }\n    lerp(color, t) {\n        this.r += (color.r - this.r) * t;\n        this.g += (color.g - this.g) * t;\n        this.b += (color.b - this.b) * t;\n        this.a += (color.a - this.a) * t;\n        return this;\n    }\n    lerpHSL(color, t) {\n        const hslA = this.toHSL();\n        const hslB = color.toHSL();\n        const h = hslA.h + (hslB.h - hslA.h) * t;\n        const s = hslA.s + (hslB.s - hslA.s) * t;\n        const l = hslA.l + (hslB.l - hslA.l) * t;\n        this.setFromHSL(h, s, l);\n        return this;\n    }\n    clone() {\n        return new Color(this.r, this.g, this.b, this.a);\n    }\n    copy(color) {\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n        this.a = color.a;\n        return this;\n    }\n    equals(color) {\n        return this.r === color.r && this.g === color.g && this.b === color.b && this.a === color.a;\n    }\n    toStyleText() {\n        return `rgba(${Math.floor(this.r * 256)}, ${Math.floor(this.g * 256)}, ${Math.floor(this.b * 256)}, ${this.a})`;\n    }\n}\n//# sourceMappingURL=Color.js.map","import { Vector2 } from '../../math';\nexport class Vector2Provider {\n    xValue = 0;\n    yValue = 0;\n    prevXValue = 0;\n    prevYValue = 0;\n    get length() {\n        return Math.sqrt(this.xValue * this.xValue + this.yValue * this.yValue);\n    }\n    get length2() {\n        return this.xValue * this.xValue + this.yValue * this.yValue;\n    }\n    get startPressed() {\n        return this.prevXValue ** 2 + this.prevYValue ** 2 === 0 && this.length2 > 0;\n    }\n    get endPressed() {\n        return this.prevXValue ** 2 + this.prevYValue ** 2 > 0 && this.length2 === 0;\n    }\n    get pressed() {\n        return this.length2 > 0;\n    }\n    get value() {\n        return new Vector2(this.xValue, this.yValue);\n    }\n    update(x, y) {\n        this.prevXValue = this.xValue;\n        this.prevYValue = this.yValue;\n        this.xValue = x;\n        this.yValue = y;\n    }\n}\n//# sourceMappingURL=Vector2Provider.js.map","export class ScalarProvider {\n    rawValue = 0;\n    prevValue = 0;\n    get startPressed() {\n        return this.prevValue === 0 && this.rawValue !== 0;\n    }\n    get endPressed() {\n        return this.prevValue !== 0 && this.rawValue === 0;\n    }\n    get pressed() {\n        return this.rawValue !== 0;\n    }\n    get value() {\n        return this.rawValue;\n    }\n    update(value) {\n        this.prevValue = this.rawValue;\n        this.rawValue = value;\n    }\n}\n//# sourceMappingURL=ScalarProvider.js.map","import { Vector2Provider } from './Vector2Provider';\nimport { ScalarProvider } from './ScalarProvider';\nexport class KeyBinder {\n    keybind;\n    keyContainer;\n    constructor(keybind) {\n        this.keybind = keybind;\n        // create key containers\n        const keyContainer = {};\n        Object.keys(keybind).forEach((key) => {\n            if (!keybind[key])\n                throw new Error(`KeyBinder: Invalid keybind(${key})`);\n            const value = keybind[key][0];\n            switch (value.type) {\n                case 'scalarkey1':\n                case 'scalarkey2':\n                    keyContainer[key] = new ScalarProvider();\n                    break;\n                case 'vector2key2':\n                case 'vector2key4':\n                    keyContainer[key] = new Vector2Provider();\n                    break;\n                default:\n                    throw new Error(`KeyBinder: Invalid type of keybind(${value})`);\n            }\n        });\n        this.keyContainer = keyContainer;\n    }\n    getValue(id) {\n        return this.keyContainer[id].value;\n    }\n    getStartPressed(id) {\n        return this.keyContainer[id].startPressed;\n    }\n    getEndPressed(id) {\n        return this.keyContainer[id].endPressed;\n    }\n    getPressed(id) {\n        return this.keyContainer[id].pressed;\n    }\n    update(keyValues) {\n        Object.keys(this.keybind).forEach((key) => {\n            const keyBinds = this.keybind[key];\n            keyBinds.forEach((keyBind) => {\n                switch (keyBind.type) {\n                    case 'scalarkey1': {\n                        this.keyContainer[key].update(keyValues[keyBind.value]);\n                        break;\n                    }\n                    case 'scalarkey2': {\n                        const positiveValue = keyValues[keyBind.positiveValue];\n                        const negativeValue = keyValues[keyBind.negativeValue];\n                        this.keyContainer[key].update(positiveValue - negativeValue);\n                        break;\n                    }\n                    case 'vector2key2': {\n                        const xValue = keyValues[keyBind.xValue];\n                        const yValue = keyValues[keyBind.yValue];\n                        this.keyContainer[key].update(xValue, yValue);\n                        break;\n                    }\n                    case 'vector2key4': {\n                        const xPositiveValue = keyValues[keyBind.xPositiveValue];\n                        const xNegativeValue = keyValues[keyBind.xNegativeValue];\n                        const yPositiveValue = keyValues[keyBind.yPositiveValue];\n                        const yNegativeValue = keyValues[keyBind.yNegativeValue];\n                        this.keyContainer[key].update(xPositiveValue - xNegativeValue, yPositiveValue - yNegativeValue);\n                        break;\n                    }\n                    default: {\n                        throw new Error(`KeyBinder: Invalid type of keybind(${keyBinds})`);\n                    }\n                }\n            });\n        });\n    }\n}\n//# sourceMappingURL=KeyBinder.js.map","import { inputableKeyList } from './InputDefinition';\nimport { KeyBinder } from './KeyBinder';\nexport class InputManager {\n    keybinds;\n    keybinders;\n    rawKeyValues;\n    constructor(window, keybinds) {\n        this.keybinds = keybinds;\n        this.keybinders = Object.keys(keybinds).reduce((acc, key) => {\n            acc[key] = new KeyBinder(keybinds[key]);\n            return acc;\n        }, {});\n        this.rawKeyValues = inputableKeyList.reduce((acc, key) => {\n            acc[key] = 0;\n            return acc;\n        }, {});\n        window.addEventListener('keydown', (e) => {\n            this.rawKeyValues[e.key] = 1;\n        });\n        window.addEventListener('keyup', (e) => {\n            this.rawKeyValues[e.key] = 0;\n        });\n    }\n    getKeybinder(key) {\n        return this.keybinders[key];\n    }\n    updateKeyBinds() {\n        Object.keys(this.keybinds).forEach((key) => {\n            this.keybinders[key].update(this.rawKeyValues);\n        });\n    }\n}\n//# sourceMappingURL=InputManager.js.map","const imageFileLoader = (path, progress) => {\n    const target = new Image();\n    target.src = path;\n    progress?.bind(target)(0);\n    return new Promise((resolve, reject) => {\n        target.addEventListener('load', () => {\n            progress?.bind(target)(1);\n            resolve(target);\n        });\n        target.addEventListener('error', () => {\n            reject();\n        });\n    });\n};\nconst audioFileLoader = (path, progress) => {\n    const target = new Audio();\n    target.src = path;\n    progress?.bind(target)(0);\n    return new Promise((resolve, reject) => {\n        target.addEventListener('load', () => {\n            progress?.bind(target)(1);\n            resolve(target);\n        });\n        target.addEventListener('error', () => {\n            reject();\n        });\n    });\n};\nexport const fileLoaderTable = {\n    image: imageFileLoader,\n    audio: audioFileLoader,\n};\n//# sourceMappingURL=fileLoaders.js.map","import { fileLoaderTable } from './fileLoaders';\n/**\n * ゲームに必要なファイルを読み取るクラス\n * 型安全にするために、ファイルのリストをコンストラクタで渡す\n */\nexport class StaticFileLoader {\n    _fileList;\n    constructor(fileList) {\n        this._fileList = fileList;\n    }\n    /**\n     * ファイルをすべて読み込む\n     * @param progress\n     */\n    async loadAll(progress) {\n        let loadedCount = 0;\n        const loadFilePromises = Object.entries(this._fileList).map(([key, asset]) => {\n            const loader = fileLoaderTable[asset.fileType];\n            return loader(asset.path, null).then((data) => {\n                loadedCount += 1;\n                progress(loadedCount / Object.keys(this._fileList).length);\n                asset.data = data;\n                return [key, data];\n            });\n        });\n        await Promise.all(loadFilePromises);\n    }\n    get(id) {\n        return this._fileList[id];\n    }\n}\n//# sourceMappingURL=StaticFileLoader.js.map","export const mapRecord = (record, fn) => Object.fromEntries(Object.entries(record)\n    .map(([key, value]) => [key, fn(key, value)]));\nexport const sumRecord = (record) => Object.values(record).reduce((acc, current) => acc + current, 0);\n//# sourceMappingURL=objutil.js.map","import { fileLoaderTable } from './fileLoaders';\nimport { mapRecord, sumRecord } from '../../util/objutil';\n/**\n * ゲーム開始後動的にファイルを読むためのクラス\n */\nexport class DynamicFileLoader {\n    _registeredAssetTable = {};\n    /**\n     * アセットの読み込み\n     * @param key\n     * @param asset\n     * @param progress\n     */\n    async load(key, asset, progress) {\n        if (this._registeredAssetTable[key] !== undefined)\n            throw new Error(`DynamicFileLoader: Asset(${String(key)}) is already registered`);\n        const loader = fileLoaderTable[asset.fileType];\n        this._registeredAssetTable[key] = asset;\n        this._registeredAssetTable[key].data = await loader(asset.path, progress);\n    }\n    /**\n     * 複数アセットの読み込み\n     * @param fileTable\n     * @param progress\n     */\n    async loadAll(fileTable, progress = () => { }) {\n        const loadFileProgresses = mapRecord(fileTable, () => 0);\n        const fileCount = Object.keys(fileTable).length;\n        const loadFilePromises = Object.entries(fileTable).map(([key, asset]) => this.load(key, asset, (rate) => {\n            loadFileProgresses[key] = rate;\n            progress(sumRecord(loadFileProgresses) / fileCount);\n        }));\n        await Promise.all(loadFilePromises);\n    }\n    /**\n     * アセットの取得\n     * @param id\n     */\n    get(id) {\n        if (!this._registeredAssetTable[id])\n            throw new Error(`DynamicFileLoader: Asset(${String(id)}) is not registered`);\n        return this._registeredAssetTable[id];\n    }\n    /**\n     * アセットのメモリ開放\n     * @param id\n     */\n    dispose(id) {\n        if (!this._registeredAssetTable[id])\n            throw new Error(`DynamicFileLoader: Asset(${String(id)}) is not registered`);\n        delete this._registeredAssetTable[id];\n    }\n}\n//# sourceMappingURL=DynamicFileLoader.js.map","export class AssetBase {\n    _path;\n    /**\n     * ファイルのあるパス\n     */\n    get path() {\n        return this._path;\n    }\n    _fileType;\n    get fileType() {\n        return this._fileType;\n    }\n    _data;\n    /**\n     * ファイルのデータ本体\n     */\n    get data() {\n        return this._data;\n    }\n    set data(data) {\n        this._data = data;\n        this._isLoaded = true;\n    }\n    _isLoaded;\n    /**\n     * ファイルがロード済みかどうか\n     */\n    get isLoaded() {\n        return this._isLoaded;\n    }\n    constructor(path, fileType) {\n        this._path = path;\n        this._fileType = fileType;\n        this._isLoaded = false;\n    }\n}\n//# sourceMappingURL=AssetBase.js.map","import { AssetBase } from './AssetBase';\nexport class AudioAsset extends AssetBase {\n    /**\n     * 音声アセットのタイプ\n     */\n    audioType;\n    /**\n     * ループ開始時間\n     * bgm以外では効果なし\n     */\n    loopStartTime = 0;\n    /**\n     * ループ終了時間\n     * bgm以外では効果なし\n     */\n    loopEndTime = 0;\n    /**\n     * 音声の長さ\n     */\n    get length() {\n        return this.data?.duration || 0;\n    }\n    constructor(path, audioType, loopStartTime = 0, loopEndTime = 0) {\n        super(path, 'audio');\n        this.audioType = audioType;\n        this.loopStartTime = loopStartTime;\n        this.loopEndTime = loopEndTime;\n    }\n}\n//# sourceMappingURL=AudioAsset.js.map","import { AssetBase } from './AssetBase';\n/**\n * 画像を表すクラス\n */\nexport class SpriteAsset extends AssetBase {\n    get width() {\n        return this.data?.width || 0;\n    }\n    get height() {\n        return this.data?.height || 0;\n    }\n    constructor(path) {\n        super(path, 'image');\n    }\n}\n//# sourceMappingURL=SpriteAsset.js.map","import { AssetBase } from './AssetBase';\n/**\n * スプライトシートの画像を表すクラス\n */\nexport class SpriteSheetAsset extends AssetBase {\n    columns;\n    rows;\n    get width() {\n        return this.data?.width || 0;\n    }\n    get height() {\n        return this.data?.height || 0;\n    }\n    /**\n     * スプライトシートの各画像の幅\n     */\n    get segmentWidth() {\n        return this.width / this.columns;\n    }\n    /**\n     * スプライトシートの各画像の高さ\n     */\n    get segmentHeight() {\n        return this.height / this.rows;\n    }\n    constructor(path, columns, rows) {\n        super(path, 'image');\n        this.columns = columns;\n        this.rows = rows;\n    }\n}\n//# sourceMappingURL=SpriteSheetAsset.js.map","import { AssetBase } from './AssetBase';\n/**\n * 画像の一部を切り出した画像を表すクラス\n */\nexport class SubSpriteAsset extends AssetBase {\n    left;\n    top;\n    right;\n    bottom;\n    constructor(path, left, top, right, bottom) {\n        super(path, 'image');\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n}\n//# sourceMappingURL=SubSpriteAsset.js.map","import { mapRecord } from '../../util/objutil';\nexport class LevelSelector {\n    _levelRecord;\n    _currentLevelKey = null;\n    _nextLevelKey = null;\n    constructor() {\n        this._levelRecord = {};\n    }\n    /**\n     * APIでレベルを初期化\n     * APIにLevelSelector自体が含まれるため、コンストラクタ外で指定\n     * @param gameApi\n     * @param levelTable\n     * @param initialLevel\n     */\n    initializeLevels(gameApi, levelTable, initialLevel) {\n        mapRecord(levelTable, (key, createRoot) => {\n            this._levelRecord[key] = createRoot(gameApi);\n        });\n        this._currentLevelKey = initialLevel;\n    }\n    /**\n     * レベルを移動\n     * ※注意 レベルの移動処理はGameEntryのupdate処理が全部終わってから行われるので、実行順に注意\n     * @param levelName\n     */\n    moveLevel(levelName) {\n        if (this._nextLevelKey !== null)\n            return;\n        if (this._currentLevelKey === null)\n            throw new Error('currentLevelKey is null');\n        this._nextLevelKey = levelName;\n        this._levelRecord[this._currentLevelKey].destroy();\n        this._currentLevelKey = levelName;\n    }\n    /**\n     * 現在のレベルのLevelManagerを取得\n     */\n    currentLevel() {\n        if (this._currentLevelKey === null)\n            throw new Error('currentLevelKey is null');\n        return this._levelRecord[this._currentLevelKey];\n    }\n    /**\n     * GameCoreによってupdate処理の後に呼ばれる\n     */\n    postProcess() {\n        if (this._currentLevelKey === null)\n            throw new Error('currentLevelKey is null');\n        if (this._nextLevelKey !== null) {\n            this._levelRecord[this._currentLevelKey].destroy();\n            this._currentLevelKey = this._nextLevelKey;\n            this._nextLevelKey = null;\n        }\n    }\n}\n//# sourceMappingURL=LevelSelector.js.map","export const createGameEvent = () => {\n    const event = {\n        listeners: [],\n        listen(listener) {\n            this.listeners.push(listener);\n        },\n        unlisten(listener) {\n            this.listeners = this.listeners.filter((l) => l !== listener);\n        },\n        call(data) {\n            this.listeners.forEach((l) => l(data));\n        },\n    };\n    return event;\n};\n//# sourceMappingURL=GameEvent.js.map","import { createGameEvent } from './GameEvent';\n// eslint-disable-next-line no-shadow\nexport var LevelEventType;\n(function (LevelEventType) {\n    LevelEventType[LevelEventType[\"LevelStart\"] = 0] = \"LevelStart\";\n    LevelEventType[LevelEventType[\"Pause\"] = 1] = \"Pause\";\n    LevelEventType[LevelEventType[\"Resume\"] = 2] = \"Resume\";\n    LevelEventType[LevelEventType[\"PlayerDeath\"] = 3] = \"PlayerDeath\";\n    LevelEventType[LevelEventType[\"GameOver\"] = 4] = \"GameOver\";\n    LevelEventType[LevelEventType[\"GameClear\"] = 5] = \"GameClear\";\n})(LevelEventType || (LevelEventType = {}));\nexport const LevelEvent = createGameEvent();\n//# sourceMappingURL=LevelEvent.js.map","import { LevelEvent, LevelEventType } from '../../event';\n// このLevelStateが二重定義されているというエラーが出るが、どこで定義されているのかわからないので暫定的に無視\n// eslint-disable-next-line no-shadow\nexport var LevelState;\n(function (LevelState) {\n    LevelState[LevelState[\"Playing\"] = 0] = \"Playing\";\n    LevelState[LevelState[\"Paused\"] = 1] = \"Paused\";\n    LevelState[LevelState[\"GameOver\"] = 2] = \"GameOver\";\n    LevelState[LevelState[\"GameClear\"] = 3] = \"GameClear\";\n})(LevelState || (LevelState = {}));\n/**\n * レベルに関する処理を管轄するクラス\n */\nexport class LevelManager {\n    /**\n     * レベルにあるEntryのルート\n     */\n    rootEntry;\n    /**\n     * レベルの状態を表す\n     * @protected\n     */\n    state;\n    constructor(levelManagerSettings) {\n        this.rootEntry = levelManagerSettings.rootEntry;\n        this.state = LevelState.Playing;\n    }\n    levelEventListener(levelEventType) {\n        switch (levelEventType) {\n            case LevelEventType.LevelStart:\n                // do nothing\n                break;\n            case LevelEventType.Pause:\n                this.state = LevelState.Paused;\n                this.pause();\n                break;\n            case LevelEventType.Resume:\n                this.state = LevelState.Playing;\n                this.resume();\n                break;\n            case LevelEventType.PlayerDeath:\n                this.playerDeath();\n                break;\n            case LevelEventType.GameClear:\n                this.state = LevelState.GameClear;\n                this.gameClear();\n                break;\n            case LevelEventType.GameOver:\n                this.state = LevelState.GameOver;\n                this.gameOver();\n                break;\n            default:\n                throw new Error(`LevelManager: Invalid LevelEventType (${levelEventType})`);\n        }\n    }\n    start() {\n        this.state = LevelState.Playing;\n        LevelEvent.listen(this.levelEventListener.bind(this));\n    }\n    exit() {\n        this.rootEntry.destroy();\n        LevelEvent.unlisten(this.levelEventListener.bind(this));\n    }\n    gameOver() {\n        // no impl\n    }\n    gameClear() {\n        // no impl\n    }\n    pause() {\n        // no impl\n    }\n    resume() {\n        // no impl\n    }\n    playerDeath() {\n        // no impl\n    }\n}\n//# sourceMappingURL=LevelManager.js.map","import { LevelManager } from '../LevelManager';\nimport { LevelEvent, LevelEventType } from '../../../event';\nimport { wait } from '../../../util';\nexport class ActionLevelManager extends LevelManager {\n    playerLife = -1;\n    playerRespawnPoint;\n    playerRespawnDelay = 0;\n    constructor(actionLevelManagerSettings) {\n        super(actionLevelManagerSettings);\n        this.playerRespawnPoint = actionLevelManagerSettings.respawnPoint;\n        this.playerLife = actionLevelManagerSettings.life;\n        this.playerRespawnDelay = actionLevelManagerSettings.respawnDelay;\n    }\n    playerDeath() {\n        super.playerDeath();\n        if (this.playerLife === -1) {\n            this.respawnPlayer();\n        }\n        this.playerLife -= 1;\n        if (this.playerLife === 0) {\n            LevelEvent.call(LevelEventType.GameOver);\n        }\n        else {\n            this.respawnPlayer();\n        }\n    }\n    async respawnPlayer() {\n        if (this.playerRespawnDelay > 0)\n            await wait(this.playerRespawnDelay * 1000);\n    }\n    setRespawnPoint(respawnPoint) {\n        this.playerRespawnPoint = respawnPoint;\n    }\n}\n//# sourceMappingURL=ActionLevelManager.js.map","export class GlobalStore {\n    _store;\n    constructor(initialData) {\n        this._store = initialData;\n        this.loadData(initialData);\n    }\n    /**\n     * データをLocalStorageから取得\n     * @param initialData\n     * @private\n     */\n    loadData(initialData) {\n        const rawData = localStorage.getItem('bubble-engine-storage');\n        if (rawData) {\n            const data = JSON.parse(rawData);\n            this._store = {\n                ...initialData,\n                ...data,\n            };\n        }\n    }\n    /**\n     * グローバルストアのデータを更新\n     * @param key\n     * @param dispatcher\n     */\n    dispatch(key, dispatcher) {\n        dispatcher(this._store[key]);\n        localStorage.setItem('bubble-engine-storage', JSON.stringify(this._store));\n    }\n    /**\n     * データの取得\n     * @param key\n     */\n    getValue(key) {\n        return this._store[key];\n    }\n}\n//# sourceMappingURL=GlobalStore.js.map","export class AchievementManager {\n    _statusBlueprint;\n    _achievementBlueprint;\n    _status;\n    _achievement;\n    constructor(statusBlueprint, achievementBlueprint) {\n        this._statusBlueprint = statusBlueprint;\n        this._achievementBlueprint = achievementBlueprint;\n        this._status = {};\n        this._achievement = {};\n        this.createInitialStatus();\n        this.createInitialAchievement();\n    }\n    createInitialStatus() {\n        for (const key in this._statusBlueprint) {\n            const blueprint = this._statusBlueprint[key];\n            if (blueprint.type === 'once') {\n                this._status[key] = false;\n            }\n            else {\n                this._status[key] = blueprint.initial;\n            }\n        }\n    }\n    createInitialAchievement() {\n        for (const key in this._achievementBlueprint) {\n            this._achievement[key] = false;\n        }\n    }\n}\n//# sourceMappingURL=AchievementManager.js.map","/**\n * 基本的なコンポーネント更新前に実行される事前処理用のコンポーネント\n */\nexport class PreprocessBase {\n    entry;\n    constructor(entry) {\n        this.entry = entry;\n    }\n}\n//# sourceMappingURL=PreprocessBase.js.map","import { GraphicComponent } from '../../component';\n/**\n * 描画系をつかさどるコンポーネント\n */\nexport class GraphicPreprocess {\n    entry;\n    /**\n     * 描画順\n     */\n    index = 0;\n    constructor(entry) {\n        this.entry = entry;\n    }\n    process() {\n        if (!this.entry.enabled)\n            return;\n        const comp = this.entry.getComponent(GraphicComponent);\n        if (comp && comp.enabled) {\n            this.draw(comp);\n        }\n        const childrenGraphic = this.entry.transform.children.map((childTransform) => childTransform.entry.graphic);\n        childrenGraphic.sort((a, b) => a.index - b.index);\n        childrenGraphic.forEach((child) => {\n            child.process();\n        });\n    }\n    draw(comp) {\n        const { worldMatrix } = this.entry.transform;\n        const ctx = comp.layer.context;\n        ctx.save();\n        ctx.transform(worldMatrix.m00, worldMatrix.m01, worldMatrix.m10, worldMatrix.m11, worldMatrix.m02, worldMatrix.m12);\n        ctx.rotate(comp.rotation);\n        comp.parts.forEach((part, index) => {\n            const boundingBox = part.render(comp.layer);\n            if (index === 0)\n                comp.boundingRect.copy(boundingBox);\n            else\n                comp.boundingRect.merge(boundingBox);\n        });\n        ctx.restore();\n    }\n}\n//# sourceMappingURL=GraphicPreprocess.js.map","export class GraphicManager {\n    _layerNames;\n    _layerTable;\n    _screenshotCanvas;\n    _canvasWrapper;\n    _width = 0;\n    _height = 0;\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(layers, wrapper) {\n        this._layerNames = layers;\n        this._canvasWrapper = wrapper;\n        this._layerTable = {};\n        if (this._canvasWrapper.style.position === 'relative') {\n            this._canvasWrapper.style.position = 'relative';\n        }\n        layers.forEach((layerName) => {\n            const canvas = document.createElement('canvas');\n            canvas.style.position = 'absolute';\n            canvas.style.top = '0';\n            canvas.style.left = '0';\n            this._layerTable[layerName] = {\n                canvas,\n                context: canvas.getContext('2d'),\n            };\n            this._canvasWrapper?.appendChild(canvas);\n        });\n        this._screenshotCanvas = document.createElement('canvas');\n        this.resetSize();\n        window.addEventListener('resize', this.resetSize.bind(this));\n    }\n    resetSize() {\n        if (this._canvasWrapper === null) {\n            return;\n        }\n        const rect = this._canvasWrapper.getBoundingClientRect();\n        this._width = rect.width;\n        this._height = rect.height;\n        this._layerNames.forEach((layerName) => {\n            const layer = this._layerTable[layerName];\n            layer.canvas.width = this._width;\n            layer.canvas.height = this._height;\n        });\n    }\n    /**\n     * レイヤーの取得\n     * @param id\n     */\n    getLayer(id) {\n        return this._layerTable[id];\n    }\n    /**\n     *\n     */\n    beforeProcess() {\n        if (this._canvasWrapper === null) {\n            console.error('canvasWrapper is not set.');\n        }\n        this._layerNames.forEach((layerName) => {\n            const layer = this._layerTable[layerName];\n            layer.context.clearRect(0, 0, this._width, this._height);\n        });\n    }\n    afterProcess() {\n        // no impl\n    }\n    getScreenshot() {\n        this._screenshotCanvas.width = this._width;\n        this._screenshotCanvas.height = this._height;\n        const context = this._screenshotCanvas.getContext('2d');\n        if (context === null) {\n            throw new Error('CanvasRenderingContext2D is not supported.');\n        }\n        this._layerNames.forEach((layerName) => {\n            const layer = this._layerTable[layerName];\n            context.drawImage(layer.canvas, 0, 0);\n        });\n        return this._screenshotCanvas;\n    }\n}\n//# sourceMappingURL=GraphicManager.js.map","/* eslint-disable no-use-before-define */\nimport { Matrix3, Vector2 } from '../../math';\nimport { PreprocessBase } from './PreprocessBase';\n/**\n * GameEntryの場所を管理するコンポーネント\n */\nexport class TransformPreprocess extends PreprocessBase {\n    /**\n     * ローカル座標\n     */\n    position = new Vector2();\n    /**\n     * ローカル回転角度\n     * 回転を考慮し始めると当たり判定などで判定が面倒になるので、0固定\n     */\n    rotation = 0;\n    /**\n     * ローカルスケール\n     */\n    scale = new Vector2(1, 1);\n    /**\n     * ローカル座標系での変換行列\n     * update後に再計算される\n     */\n    matrix = new Matrix3();\n    /**\n     * グローバル座標系での変換行列\n     * update後に再計算される\n     */\n    worldMatrix = new Matrix3();\n    _worldPosition = new Vector2();\n    _worldScale = new Vector2();\n    parent = null;\n    children = [];\n    /**\n     * グローバル座標を取得する\n     */\n    get worldPosition() {\n        const { worldMatrix } = this;\n        return this._worldPosition.set(worldMatrix.m02, worldMatrix.m12);\n    }\n    /**\n     * グローバル座標系での回転角度を取得する\n     * 注意: 計算簡略化のため回転は考慮されていない\n     */\n    get worldRotation() {\n        if (this.parent) {\n            return this.parent.worldRotation + this.rotation;\n        }\n        return this.rotation;\n    }\n    /**\n     * グローバル座標系でのスケールを取得する\n     */\n    get worldScale() {\n        const { worldMatrix } = this;\n        return this._worldScale.set(worldMatrix.m00, worldMatrix.m11);\n    }\n    /**\n     * 子供を追加する\n     * @param child\n     */\n    addChild(child) {\n        child.parent = this;\n        this.children.push(child);\n    }\n    /**\n     * 子供を削除する\n     * @param child\n     */\n    removeChild(child) {\n        const index = this.children.indexOf(child);\n        if (index >= 0) {\n            this.children.splice(index, 1);\n        }\n    }\n    process() {\n        if (!this.entry.enabled)\n            return;\n        // 行列の更新\n        this.matrix.compose(this.position, this.rotation, this.scale);\n        if (this.parent) {\n            this.worldMatrix.copy(this.parent.worldMatrix);\n            this.worldMatrix.multiply(this.matrix);\n        }\n        else {\n            this.worldMatrix.copy(this.matrix);\n        }\n        // 子供の更新\n        this.children.forEach((child) => {\n            child.process();\n        });\n    }\n}\n//# sourceMappingURL=TransformPreprocess.js.map","import { ColliderComponent } from '../../component';\nexport class CollisionPreprocess {\n    entry;\n    constructor(entry) {\n        this.entry = entry;\n    }\n    process() {\n        if (!this.entry.enabled)\n            return;\n        const collider = this.entry.getComponent(ColliderComponent);\n        if (collider && collider.enabled) {\n            collider.layer.registerCollider(collider);\n            collider.resetCollision();\n        }\n        const childrenCollision = this.entry.transform.children.map((childTransform) => childTransform.entry.collision);\n        childrenCollision.forEach((child) => {\n            child.process();\n        });\n    }\n}\n//# sourceMappingURL=CollisionPreprocess.js.map","export class CollisionLayerInfo {\n    colliders = [];\n    registerCollider(collider) {\n        this.colliders.push(collider);\n    }\n}\n//# sourceMappingURL=CollisionLayerInfo.js.map","export const boxBoxHitTest = (box1, box2, hitPoint) => {\n    const worldBox1 = box1.getWorldBox();\n    const worldBox2 = box2.getWorldBox();\n    if (worldBox1.left > worldBox2.right)\n        return false;\n    if (worldBox1.right < worldBox2.left)\n        return false;\n    if (worldBox1.top > worldBox2.bottom)\n        return false;\n    if (worldBox1.bottom < worldBox2.top)\n        return false;\n    const minimumTop = Math.max(worldBox1.top, worldBox2.top);\n    const minimumBottom = Math.min(worldBox1.bottom, worldBox2.bottom);\n    const minimumLeft = Math.max(worldBox1.left, worldBox2.left);\n    const minimumRight = Math.min(worldBox1.right, worldBox2.right);\n    hitPoint.set((minimumLeft + minimumRight) / 2, (minimumTop + minimumBottom) / 2);\n    return true;\n};\n//# sourceMappingURL=boxBoxHitTest.js.map","import { UndirectedTable } from '../../util';\nimport { boxBoxHitTest } from './boxBoxHitTest';\nconst availableShapes = ['box'];\nexport const testerTable = new UndirectedTable(availableShapes, null);\ntesterTable.set('box', 'box', boxBoxHitTest);\n//# sourceMappingURL=testerTable.js.map","import { CollisionLayerInfo } from './CollisionLayerInfo';\nimport { Vector2 } from '../../math';\nimport { testerTable } from '../../collision/tester/testerTable';\nexport class CollisionManager {\n    _layerNames;\n    _layerTable = {};\n    collisionTable;\n    _tempHitPoint = new Vector2();\n    constructor(layers, collisionPairs) {\n        this._layerNames = layers;\n        layers.forEach((layerName) => {\n            this._layerTable[layerName] = new CollisionLayerInfo();\n        });\n        if (collisionPairs) {\n            this.collisionTable = collisionPairs;\n        }\n        else {\n            this.collisionTable = [];\n            layers.forEach((layerName, index) => {\n                for (let i = 0; i < index + 1; i += 1) {\n                    this.collisionTable.push([layerName, layers[i]]);\n                }\n            });\n        }\n    }\n    /**\n     * レイヤーIDからレイヤーを取得\n     * @param id\n     */\n    getLayer(id) {\n        return this._layerTable[id];\n    }\n    beforeProcess() {\n        Object.keys(this._layerTable).forEach((layerName) => {\n            this._layerTable[layerName].colliders = [];\n        });\n    }\n    afterProcess() {\n        // 衝突判定\n        this.collisionTable.forEach(([key1, key2]) => {\n            const layer1 = this._layerTable[key1];\n            const layer2 = this._layerTable[key2];\n            if (key1 === key2) {\n                layer1.colliders.forEach((collider1, index) => {\n                    // 自分自身と、すでに判定済みの物体は当たり判定をしない\n                    for (let i = 0; i < index; i += 1) {\n                        const collider2 = layer1.colliders[i];\n                        this.testAndRegister(collider1, collider2);\n                    }\n                });\n                return;\n            }\n            layer1.colliders.forEach((collider1) => {\n                layer2.colliders.forEach((collider2) => {\n                    this.testAndRegister(collider1, collider2);\n                });\n            });\n        });\n        // 衝突情報を整理してイベントを発行\n        this._layerNames.forEach((layerName) => {\n            this._layerTable[layerName].colliders.forEach((collider) => {\n                collider.processCollision();\n            });\n        });\n    }\n    testAndRegister(collider1, collider2) {\n        const tester = testerTable.get(collider1.colliderId, collider2.colliderId);\n        if (!tester) {\n            throw new Error(`CollisionPreprocessManager: Collision(${collider1.colliderId}, ${collider2.colliderId}) is only allowed.`);\n        }\n        if (tester(collider1, collider2, this._tempHitPoint)) {\n            collider1.registerCollision({\n                collider: collider2,\n                hitPoint: new Vector2().copy(this._tempHitPoint),\n            });\n            collider2.registerCollision({\n                collider: collider1,\n                hitPoint: new Vector2().copy(this._tempHitPoint),\n            });\n        }\n    }\n}\n//# sourceMappingURL=CollisionManager.js.map","export class Time {\n    timeScale = 1;\n    _gameTime = 0;\n    /**\n     * ゲーム起動からのゲーム内時間\n     */\n    get gameTime() {\n        return this._gameTime;\n    }\n    _deltaTime = 0;\n    /**\n     * 前フレームからのゲーム内経過時間\n     */\n    get deltaTime() {\n        return this._deltaTime;\n    }\n    _unscaledDeltaTime = 0;\n    /**\n     * timeScaleに影響しない前フレームからの実経過時間\n     */\n    get unscaledDeltaTime() {\n        return this._unscaledDeltaTime;\n    }\n    _levelStartTime = 0;\n    /**\n     * 現在のレベルの開始からのゲーム内経過時間\n     */\n    get levelTime() {\n        return this._gameTime - this._levelStartTime;\n    }\n    _previousTimeStamp = 0;\n    /**\n     * フレーム時間を計算する\n     * GameCoreのupdate関数内で呼び出す\n     * @param timeStamp\n     */\n    calcDeltaTime(timeStamp) {\n        const unscaledDeltaTime = timeStamp - this._previousTimeStamp;\n        this._previousTimeStamp = timeStamp;\n        this._unscaledDeltaTime = unscaledDeltaTime;\n        this._deltaTime = unscaledDeltaTime * this.timeScale;\n        this._gameTime += this._deltaTime;\n    }\n    resetLevelTime() {\n        this._levelStartTime = this._gameTime;\n    }\n    reset(previousTimeStamp) {\n        this._gameTime = 0;\n        this._deltaTime = 0;\n        this._unscaledDeltaTime = 0;\n        this._levelStartTime = 0;\n        this._previousTimeStamp = previousTimeStamp;\n    }\n}\n//# sourceMappingURL=Time.js.map","import { InputManager } from './input';\nimport { DynamicFileLoader, StaticFileLoader } from './loader';\nimport { AchievementManager } from './achievement';\nimport { CollisionManager, GraphicManager } from './preprocess';\nimport { GlobalStore } from './store';\nimport { LevelSelector } from './level';\nimport { Time } from './time';\nexport class GameCore {\n    _originalSettings;\n    _api;\n    _requestAnimationFrameId = -1;\n    constructor(settings, levelTable) {\n        this._originalSettings = settings;\n        this._api = {\n            inputManager: new InputManager(window, settings.keybind),\n            staticFileLoader: new StaticFileLoader(settings.staticLoadAssets),\n            dynamicFileLoader: new DynamicFileLoader(),\n            graphicManager: new GraphicManager(settings.graphicLayers, settings.wrapper),\n            collisionLayers: new CollisionManager(settings.collisionLayers, settings.collisionPairs),\n            achievementManager: new AchievementManager(settings.achievementStatusBlueprint, settings.achievementBlueprint),\n            globalStore: new GlobalStore(settings.initialGlobalStore),\n            levelManager: settings.levelManager,\n            levelSelector: new LevelSelector(),\n            time: new Time()\n        };\n        this._api.levelSelector.initializeLevels(this._api, levelTable, settings.initialLevel);\n    }\n    gameLoop(deltaTime) {\n        this._requestAnimationFrameId = requestAnimationFrame(this.gameLoop.bind(this));\n        const root = this._api.levelSelector.currentLevel();\n        this._api.time.calcDeltaTime(deltaTime / 1000);\n        this._api.inputManager.updateKeyBinds();\n        root.transform.process();\n        this._api.collisionLayers.beforeProcess();\n        root.collision.process();\n        this._api.collisionLayers.afterProcess();\n        this._api.graphicManager.beforeProcess();\n        root.graphic.process();\n        this._api.graphicManager.afterProcess();\n        root.update();\n        this._api.levelSelector.postProcess();\n    }\n    /**\n     * ゲームの開始コマンド\n     */\n    run() {\n        this._api.time.reset(performance.now());\n        this._requestAnimationFrameId = requestAnimationFrame(this.gameLoop.bind(this));\n    }\n}\n//# sourceMappingURL=GameCore.js.map","import { CollisionPreprocess, GraphicPreprocess, TransformPreprocess } from '../core/preprocess';\nexport class GameEntry {\n    // プリプロセス系\n    transform;\n    graphic;\n    collision;\n    _components = [];\n    _destroyed = false;\n    get destroyed() {\n        return this._destroyed;\n    }\n    _enabled = true;\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        if (this._enabled && !value) {\n            this._components.forEach((component) => {\n                component.innerDisable();\n            });\n            this._enabled = value;\n        }\n        else if (!this._enabled && value) {\n            this._enabled = value;\n            this._components.forEach((component) => {\n                component.innerEnable();\n            });\n        }\n    }\n    constructor() {\n        this.transform = new TransformPreprocess(this);\n        this.graphic = new GraphicPreprocess(this);\n        this.collision = new CollisionPreprocess(this);\n    }\n    // region LifeCycle\n    update() {\n        this._components = this._components.filter((component) => !component.destroyed);\n        this._components.forEach((component) => {\n            component.innerUpdate();\n        });\n        const childrenEntry = this.transform.children.map((childTransform) => childTransform.entry);\n        childrenEntry.forEach((child) => {\n            child.update();\n        });\n    }\n    destroy() {\n        this._components.forEach((component) => {\n            component.innerDestroy();\n        });\n    }\n    // endregion\n    // region Process Components\n    /**\n     * コンポーネントを追加する\n     * @param component\n     */\n    addComponent(component) {\n        this._components.push(component);\n        component.innerAdded(this);\n        return component;\n    }\n    /**\n     * 自分のコンポーネントで最初に合致するものを取得する\n     * @param componentType\n     */\n    getComponent(componentType) {\n        const foundComponent = this._components.find((component) => component instanceof componentType);\n        if (foundComponent) {\n            return foundComponent;\n        }\n        return null;\n    }\n    /**\n     * 自分のコンポーネントで合致するものをすべて取得する\n     * @param componentType\n     */\n    getComponents(componentType) {\n        const foundComponents = this._components.filter((component) => component instanceof componentType);\n        if (foundComponents) {\n            return foundComponents;\n        }\n        return [];\n    }\n    /**\n     * 自分を含む子孫のコンポーネントを探索して最初に合致するコンポーネントを取得\n     * @param componentType\n     */\n    getComponentInChildren(componentType) {\n        const foundComponent = this._components.find((component) => component instanceof componentType);\n        if (foundComponent) {\n            return foundComponent;\n        }\n        for (let i = 0; i < this.transform.children.length; i += 1) {\n            const child = this.transform.children[i].entry;\n            const foundChildrenComponent = child.getComponentInChildren(componentType);\n            if (foundChildrenComponent) {\n                return foundChildrenComponent;\n            }\n        }\n        return null;\n    }\n    /**\n     * 自分を含む子孫のコンポーネントを探索してすべて取得する\n     * @param componentType\n     */\n    getComponentsInChildren(componentType) {\n        const allComponents = [];\n        const foundComponents = this.getComponents(componentType);\n        allComponents.concat(foundComponents);\n        for (let i = 0; i < this.transform.children.length; i += 1) {\n            const child = this.transform.children[i].entry;\n            const foundChildrenComponents = child.getComponentsInChildren(componentType);\n            allComponents.concat(foundChildrenComponents);\n        }\n        return allComponents;\n    }\n    /**\n     * 指定したコンポーネントを削除する\n     * @param component\n     */\n    removeComponent(component) {\n        const foundIndex = this._components.findIndex((entry) => entry === component);\n        if (foundIndex >= 0) {\n            const entry = this._components[foundIndex];\n            entry.innerDestroy();\n        }\n    }\n    /**\n     * 属するコンポーネントをすべて削除する\n     */\n    removeAllComponents() {\n        this._components.forEach((component) => {\n            component.innerDestroy();\n        });\n        this._components = [];\n    }\n}\n//# sourceMappingURL=GameEntry.js.map","/* eslint-disable class-methods-use-this */\nimport { GameEntry } from './GameEntry';\n// eslint-disable-next-line no-shadow\nexport var RespawnTarget;\n(function (RespawnTarget) {\n    RespawnTarget[RespawnTarget[\"Player\"] = 0] = \"Player\";\n    RespawnTarget[RespawnTarget[\"Enemy\"] = 1] = \"Enemy\";\n})(RespawnTarget || (RespawnTarget = {}));\nexport class RespawnPoint extends GameEntry {\n    target = RespawnTarget.Player;\n    constructor(respawnTarget) {\n        super();\n        this.target = respawnTarget;\n    }\n    start() {\n        // do nothing\n    }\n    update() {\n        // do nothing\n    }\n    exit() {\n        // do nothing\n    }\n}\n//# sourceMappingURL=RespawnPoint.js.map","import { Rect } from '../util';\nexport class GraphicBase {\n    _boundingBox = new Rect();\n}\n//# sourceMappingURL=GraphicBase.js.map","import { GraphicBase } from './GraphicBase';\nimport { Vector2 } from '../math';\nexport class SpriteGraphic extends GraphicBase {\n    position = new Vector2();\n    anchor = new Vector2(0.5, 0.5);\n    size = new Vector2();\n    alpha = 1;\n    sprite;\n    constructor(sprite) {\n        super();\n        this.sprite = sprite;\n        this.size.set(sprite.width, sprite.height);\n    }\n    render(layer) {\n        const left = this.position.x - this.anchor.x * this.size.x;\n        const top = this.position.y - this.anchor.y * this.size.y;\n        if (this.sprite.data) {\n            layer.context.globalAlpha = this.alpha;\n            layer.context.drawImage(this.sprite.data, left, top, this.size.x, this.size.y);\n            layer.context.globalAlpha = 1;\n        }\n        this._boundingBox.set(this.position.x, this.position.y, this.size.x, this.size.y);\n        return this._boundingBox;\n    }\n}\n//# sourceMappingURL=SpriteGraphic.js.map","import { GraphicBase } from './GraphicBase';\nimport { Vector2 } from '../math';\nexport class SpriteSheetGraphic extends GraphicBase {\n    position = new Vector2();\n    size = new Vector2();\n    sprite;\n    spriteIndex;\n    constructor(sprite) {\n        super();\n        this.sprite = sprite;\n        this.size.set(sprite.segmentWidth, sprite.segmentHeight);\n        this.spriteIndex = 0;\n    }\n    render(layer) {\n        if (this.sprite.data) {\n            layer.context.drawImage(this.sprite.data, (this.spriteIndex % this.sprite.columns) * this.sprite.segmentWidth, Math.floor(this.spriteIndex / this.sprite.columns) * this.sprite.segmentHeight, this.sprite.segmentWidth, this.sprite.segmentHeight, this.position.x, this.position.y, this.size.x, this.size.y);\n        }\n        this._boundingBox.set(this.position.x, this.position.y, this.size.x, this.size.y);\n        return this._boundingBox;\n    }\n}\n//# sourceMappingURL=SpriteSheetGraphic.js.map","export const setLineStyle = (context, style) => {\n    if (style.lineWidth) {\n        context.lineWidth = style.lineWidth;\n    }\n    if (style.lineCap) {\n        context.lineCap = style.lineCap;\n    }\n    if (style.lineJoin) {\n        context.lineJoin = style.lineJoin;\n    }\n    if (style.miterLimit) {\n        context.miterLimit = style.miterLimit;\n    }\n    if (style.lineDash) {\n        context.setLineDash(style.lineDash);\n    }\n    if (style.lineDashOffset) {\n        context.lineDashOffset = style.lineDashOffset;\n    }\n};\nexport const setTextStyle = (context, style) => {\n    if (style.font) {\n        context.font = style.font;\n    }\n    if (style.textAlign) {\n        context.textAlign = style.textAlign;\n    }\n    if (style.textBaseline) {\n        context.textBaseline = style.textBaseline;\n    }\n    if (style.direction) {\n        context.direction = style.direction;\n    }\n    if (style.letterSpacing) {\n        // @ts-ignore\n        context.letterSpacing = style.letterSpacing;\n    }\n    if (style.fontKerning) {\n        context.fontKerning = style.fontKerning;\n    }\n    if (style.fontStretch) {\n        // @ts-ignore\n        context.fontStretch = style.fontStretch;\n    }\n    if (style.fontVariantCaps) {\n        // @ts-ignore\n        context.fontVariantCaps = style.fontVariantCaps;\n    }\n    if (style.textRendering) {\n        // @ts-ignore\n        context.textRendering = style.textRendering;\n    }\n    if (style.wordSpacing) {\n        // @ts-ignore\n        context.wordSpacing = style.wordSpacing;\n    }\n};\nexport const setGraphicStyle = (context, style) => {\n    if (style.fill) {\n        context.fillStyle = style.fill;\n    }\n    if (style.stroke) {\n        context.strokeStyle = style.stroke;\n    }\n    if (style.alpha) {\n        context.globalAlpha = style.alpha;\n    }\n};\n//# sourceMappingURL=util.js.map","import { GraphicBase } from './GraphicBase';\nimport { Vector2 } from '../math';\nimport { setGraphicStyle, setLineStyle, setTextStyle, } from './util';\nexport class TextGraphic extends GraphicBase {\n    position = new Vector2();\n    text;\n    font;\n    style;\n    constructor(text, font, style) {\n        super();\n        this.text = text;\n        this.font = font;\n        this.style = style;\n    }\n    render(layer) {\n        const { context } = layer;\n        context.font = this.font;\n        setLineStyle(context, this.style);\n        setTextStyle(context, this.style);\n        setGraphicStyle(context, this.style);\n        if (this.style.fill) {\n            context.fillText(this.text, this.position.x, this.position.y);\n        }\n        if (this.style.stroke) {\n            context.strokeText(this.text, this.position.x, this.position.y);\n        }\n        const metrics = context.measureText(this.text);\n        this._boundingBox.set(metrics.actualBoundingBoxLeft, metrics.actualBoundingBoxAscent, metrics.actualBoundingBoxRight - metrics.actualBoundingBoxLeft, metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent);\n        return this._boundingBox;\n    }\n}\n//# sourceMappingURL=TextGraphic.js.map","import { Vector2 } from '../math';\nimport { GraphicBase } from './GraphicBase';\nexport class PathGraphic extends GraphicBase {\n    path;\n    style;\n    _tempVector = new Vector2();\n    constructor(path, style) {\n        super();\n        this.path = path;\n        this.style = style;\n    }\n    render(layer) {\n        this._tempVector.set(0, 0);\n        this.path.forEach((path, index) => {\n            const boundingBox = path.render(layer, this._tempVector);\n            if (index === 0)\n                this._boundingBox.copy(boundingBox);\n            else\n                this._boundingBox.merge(boundingBox);\n        });\n        return this._boundingBox;\n    }\n}\n//# sourceMappingURL=PathGraphic.js.map","import { Rect } from '../../util';\nexport class PathBase {\n    _boundingBox = new Rect();\n}\n//# sourceMappingURL=PathBase.js.map","import { PathBase } from './PathBase';\nimport { Vector2 } from '../../math';\nexport class BeginPath extends PathBase {\n    position = new Vector2();\n    constructor(x, y) {\n        super();\n        this.position.set(x, y);\n    }\n    render(layer, prevPos) {\n        layer.context.beginPath();\n        layer.context.moveTo(this.position.x, this.position.y);\n        prevPos.set(this.position.x, this.position.y);\n        this._boundingBox.set(this.position.x, this.position.y, 0, 0);\n        return this._boundingBox;\n    }\n}\n//# sourceMappingURL=BeginPath.js.map","import { PathBase } from './PathBase';\nimport { Vector2 } from '../../math';\nexport class LinePath extends PathBase {\n    position = new Vector2();\n    constructor(x, y) {\n        super();\n        this.position.set(x, y);\n    }\n    render(layer, prevPos) {\n        layer.context.lineTo(this.position.x, this.position.y);\n        prevPos.set(this.position.x, this.position.y);\n        this._boundingBox.set(this.position.x, this.position.y, 0, 0);\n        return this._boundingBox;\n    }\n}\n//# sourceMappingURL=LinePath.js.map","import { PathBase } from './PathBase';\nexport class ClosePath extends PathBase {\n    render(layer, prevPos) {\n        layer.context.closePath();\n        this._boundingBox.set(prevPos.x, prevPos.y, 0, 0);\n        return this._boundingBox;\n    }\n}\n//# sourceMappingURL=ClosePath.js.map"],"names":["ComponentBase","_classCallCheck","_defineProperty","_createClass","key","get","_entry","Error","_enabled","set","value","_this$_entry","_this$_entry2","_this$_entry3","enabled","innerEnable","innerDisable","_destroyed","innerAdded","entry","_initialized","_started","innerUpdate","onInitialize","onStart","onUpdate","_this$_entry4","onEnable","_this$_entry5","onDisable","innerDestroy","onDestroy","wait","ms","Promise","resolve","setTimeout","waitFrame","requestAnimationFrame","Rect","x","arguments","length","undefined","y","width","height","copy","rect","clone","contains","containsRect","intersects","merge","left","Math","min","top","right","max","bottom","UndirectedTable","keys","defaultValue","_this","_keys","forEach","_table","column","key1","key2","row","callback","_this2","index","i","EventEmitter","listeners","on","event","listener","push","emit","off","indexOf","splice","GraphicComponent","_ComponentBase","_inherits","_super","_createSuper","layer","parts","call","_assertThisInitialized","ColliderComponent","Set","resetCollision","collisions","registerCollision","collisionInfo","processCollision","tempColliders","clear","add","collider","hitColliders","has","eventEmitter","inputableKeyList","Matrix2","m00","m01","m10","m11","identity","transpose","invert","det","determinant","detInv","m","addScalar","s","sub","subScalar","multiply","scale","scaleScalar","v","rotate","rad","c","cos","sin","equals","Matrix3","m02","m12","m20","m21","m22","rotateMat2D","radian","translateMat2D","scaleMat2D","compose","position","rotation","sx","sy","Vector2","setFromPolar","r","theta","multiplyMat2","multiplyMat3","multiplyScalar","divide","divideScalar","lerp","t","dot","sqrt","lengthSquared","normalize","distanceTo","distanceToSquared","dx","dy","angleTo","acos","Vector3","z","setFromSpherical","phi","sinPhiRadius","cross","dz","Color","g","b","a","setFromHex","hex","setFromHSL","h","l","hue2rgb","p","q","_t","toHSL","d","color","lerpHSL","hslA","hslB","toStyleText","concat","floor","Vector2Provider","xValue","yValue","pow","prevXValue","prevYValue","length2","update","ScalarProvider","prevValue","rawValue","KeyBinder","keybind","keyContainer","Object","type","getValue","id","getStartPressed","startPressed","getEndPressed","endPressed","getPressed","pressed","keyValues","keyBinds","keyBind","positiveValue","negativeValue","xPositiveValue","xNegativeValue","yPositiveValue","yNegativeValue","InputManager","window","keybinds","keybinders","reduce","acc","rawKeyValues","addEventListener","e","getKeybinder","updateKeyBinds","imageFileLoader","path","progress","target","Image","src","bind","reject","audioFileLoader","Audio","fileLoaderTable","image","audio","StaticFileLoader","fileList","_fileList","_loadAll","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadedCount","loadFilePromises","wrap","_callee$","_context","prev","next","entries","map","_ref","_ref2","_slicedToArray","asset","loader","fileType","then","data","all","stop","loadAll","_x","apply","mapRecord","record","fn","fromEntries","sumRecord","values","current","DynamicFileLoader","_load","_registeredAssetTable","String","sent","load","_x2","_x3","_callee2","fileTable","loadFileProgresses","fileCount","_args2","_callee2$","_context2","rate","_x4","dispose","AssetBase","_path","_fileType","_isLoaded","_data","AudioAsset","_AssetBase","audioType","loopStartTime","loopEndTime","_this$data","duration","SpriteAsset","_this$data2","SpriteSheetAsset","columns","rows","SubSpriteAsset","LevelSelector","_levelRecord","initializeLevels","gameApi","levelTable","initialLevel","createRoot","_currentLevelKey","moveLevel","levelName","_nextLevelKey","destroy","currentLevel","postProcess","createGameEvent","listen","unlisten","filter","LevelEventType","LevelEvent","LevelState","LevelManager","levelManagerSettings","rootEntry","state","Playing","levelEventListener","levelEventType","LevelStart","Pause","Paused","pause","Resume","resume","PlayerDeath","playerDeath","GameClear","gameClear","GameOver","gameOver","start","exit","ActionLevelManager","_LevelManager","actionLevelManagerSettings","playerRespawnPoint","respawnPoint","playerLife","life","playerRespawnDelay","respawnDelay","_get","_getPrototypeOf","prototype","respawnPlayer","_respawnPlayer","setRespawnPoint","GlobalStore","initialData","_store","loadData","rawData","localStorage","getItem","JSON","parse","_objectSpread","dispatch","dispatcher","setItem","stringify","AchievementManager","statusBlueprint","achievementBlueprint","_statusBlueprint","_achievementBlueprint","_status","_achievement","createInitialStatus","createInitialAchievement","blueprint","initial","PreprocessBase","GraphicPreprocess","process","comp","getComponent","draw","childrenGraphic","transform","children","childTransform","graphic","sort","child","worldMatrix","ctx","context","save","part","boundingBox","render","boundingRect","restore","GraphicManager","layers","wrapper","_layerNames","_canvasWrapper","_layerTable","style","layerName","_this$_canvasWrapper","canvas","document","createElement","getContext","appendChild","_screenshotCanvas","resetSize","_width","_height","getBoundingClientRect","getLayer","beforeProcess","_this3","console","error","clearRect","afterProcess","getScreenshot","_this4","drawImage","TransformPreprocess","_PreprocessBase","_len","args","Array","_key","_worldPosition","parent","worldRotation","_worldScale","addChild","removeChild","matrix","CollisionPreprocess","registerCollider","childrenCollision","collision","CollisionLayerInfo","colliders","boxBoxHitTest","box1","box2","hitPoint","worldBox1","getWorldBox","worldBox2","minimumTop","minimumBottom","minimumLeft","minimumRight","availableShapes","testerTable","CollisionManager","collisionPairs","collisionTable","layer1","layer2","collider1","collider2","testAndRegister","tester","colliderId","_tempHitPoint","Time","_gameTime","_deltaTime","_unscaledDeltaTime","_levelStartTime","calcDeltaTime","timeStamp","unscaledDeltaTime","_previousTimeStamp","timeScale","resetLevelTime","reset","previousTimeStamp","GameCore","settings","_originalSettings","_api","inputManager","staticFileLoader","staticLoadAssets","dynamicFileLoader","graphicManager","graphicLayers","collisionLayers","achievementManager","achievementStatusBlueprint","globalStore","initialGlobalStore","levelManager","levelSelector","time","gameLoop","deltaTime","_requestAnimationFrameId","root","run","performance","now","GameEntry","_components","component","destroyed","childrenEntry","addComponent","componentType","foundComponent","find","getComponents","foundComponents","getComponentInChildren","foundChildrenComponent","getComponentsInChildren","allComponents","foundChildrenComponents","removeComponent","foundIndex","findIndex","removeAllComponents","RespawnTarget","RespawnPoint","_GameEntry","respawnTarget","Player","GraphicBase","SpriteGraphic","_GraphicBase","sprite","size","anchor","globalAlpha","alpha","_boundingBox","SpriteSheetGraphic","segmentWidth","segmentHeight","spriteIndex","setLineStyle","lineWidth","lineCap","lineJoin","miterLimit","lineDash","setLineDash","lineDashOffset","setTextStyle","font","textAlign","textBaseline","direction","letterSpacing","fontKerning","fontStretch","fontVariantCaps","textRendering","wordSpacing","setGraphicStyle","fill","fillStyle","stroke","strokeStyle","TextGraphic","text","fillText","strokeText","metrics","measureText","actualBoundingBoxLeft","actualBoundingBoxAscent","actualBoundingBoxRight","actualBoundingBoxDescent","PathGraphic","_tempVector","PathBase","BeginPath","_PathBase","prevPos","beginPath","moveTo","LinePath","lineTo","ClosePath","closePath"],"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"}